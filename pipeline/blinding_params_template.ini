; ############################################################
; This is a template file that is referenced by blind_2pt_usingcosmosis.py
;   It is used as a template for running cosmosis to generate
;   blinding factors to be applied to 2pt data vectors. To adapt
;   for a specific pipeline:
;   1. Edit the %include params.ini line to point towards your baseline pipeline fiel.
;   2. The values file should be edited to match your fiducial run. Since we want
;      to blind sigma8, sigma8_input needs to be in the cosmological parameters,
;      so it may need to be a values file written specifically for blinding. You could
;      always set it up to %include your standard values file though.
;   3. make sure the file in 2PT_FILE points to a file with the format expected by
;      your pipeline (with the same binning, etc.)
;   4. The modules list in [pipeline] should match your standard pipeline with a couple
;      additions. You need sigma8_rescale to be able to include sigma8_input as a parameter
;      and (as the script is set up now) you need to include the save_2pt module.
;
;  NOTE: this currently only works with the 6x2pt version of save_2pt
;       which is on the des_cmb_2pt branch of cosmosis-des-library.
;      I want to eventually get the blinding script to work withough it
;      (currently it creates, reads, and deletes 2pt fits files when computing
;       blinding factors)
; ############################################################


; import baseline parameter file; change this to point towards whatever main pipelien you want to mimic
%include params.ini

[runtime]
sampler = test


[DEFAULT]
BASELINE_DIR=.
2PT_DATA_SETS = xip xim gammat wtheta
2PT_FILE = simulated_nobias_Y3cov.fits

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
; Here we just specify the priors, since modules and values will be specific to each chain
[pipeline]
quiet=T
timing=F
debug=F
priors = priors.ini
; sigma8_rescale included so we can set sigma8 as input
modules = consistency camb sigma8_rescale halofit growth extrapolate fits_nz lens_photoz_bias source_photoz_bias unbiased_galaxies bias_neutrinos  multiply_pk IA ia_z_field pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_gal 2pt_gal_shear 2pt_shear save_2pt
; if you want to blind sigma_8, set up values file to have sigma8_input as a parameter rather than A_s
values = blinding_values_template.ini
likelihoods = 

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[test]
save_dir=

[save_2pt]
;file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
file = cosmosis-des-library/tcp/des_cmb_2pt/code_6_x_2pt/2pt/save_2pt.py
; theta_min = 2.5
; theta_max = 250.0
; n_theta = 20
; real_space = T
; make_covariance = F
; shear_nz_name = nz_source
; position_nz_name = nz_lens
filename = fidsim_3x2pt.fits
clobber = T
; number_density_shear_bin =  2.0  2.0  2.0  2.0  2.0
; number_density_lss_bin = 2.0  2.0  2.0
; sigma_e_bin = 0.2  0.2  0.2  0.2  0.2
; survey_area = 1500.0
; cut_gammat = 4,1 5,1
; cut_wtheta = 2,1 3,1 3,2 4,1 4,2 4,3 5,1 5,2 5,3 5,4




